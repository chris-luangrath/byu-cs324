1. socket and connect

2. you would use sendto() or sendmsg() instead of send() or write(), and instead of binding a local 
address with bind(), a free local port would be bound to INADDR_ANY

3. they will come from the commandline (argv)

4. The port values are the same

5. The port values are different

6. One for all clients

7. 3 calls to write()

8. The kernal receives 2 messages after the initial message.

9. 3 calls to recvfrom()

10. "All receive operations return only one packet."

11. Listen() marks the socket as passive, making it available to use. 
Accept() finds a passive socket to use for the next connection.

12. If udp/the socket type is sock_dgram, it correlates a socket with port to receive data from
If tcp/the socket type is is sock_stream, it will perform a 3-way handshake with the server

13. Messages are sent to confirm communication in the initial connection

14. The port value for different messages on the same socket is the same

15. The port value for different messages on different sockets are different

16. The server uses one socket for each client, compard to UDP that uses one socket for all clients.

17. Client made 3 calls to write/sendto

18. The kernal received 3 messages in the first call to recv

19. The kernal made 1 call

20. Question 9 used the udp socket, processed the 3 messages seperately. Question 19 with the TCP uses
a stream, so it's able to process all the messages so soon as it recieves it.

21. 

22.

23.

24.

25.

26.

27.

28.

